generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  business  Business?
  surveys   Survey[]
  
  @@map("users")
}

model Business {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  customers   Customer[]
  
  @@map("businesses")
}

model Customer {
  id        String   @id @default(cuid())
  email     String?
  name      String?
  phone     String?
  data      Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  businessId String
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
  
  responses SurveyResponse[]
  
  @@map("customers")
}

model Survey {
  id          String   @id @default(cuid())
  title       String
  description String?
  questions   Json
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  responses   SurveyResponse[]
  
  @@map("surveys")
}

model SurveyResponse {
  id        String   @id @default(cuid())
  answers   Json
  createdAt DateTime @default(now())
  
  surveyId   String
  survey     Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  
  customerId String?
  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)
  
  @@map("survey_responses")
}
